server.port=9099
spring.application.name=news-server
eureka.instance.prefer-ip-address=true
eureka.client.serviceUrl.defaultZone=http://eureka.paicaifu.com/eureka/


# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/pcf_news
spring.datasource.username= root
spring.datasource.password= abc@123
spring.datasource.driverClassName = com.mysql.jdbc.Driver

# 下面为连接池的补充设置，应用到上面所有数据源中
# 初始化大小，最小，最大
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
# 配置获取连接等待超时的时间
spring.datasource.maxWait=60000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 
spring.datasource.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒 
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
# 打开PSCache，并且指定每个连接上PSCache的大小 
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙 
spring.datasource.filters=stat,wall,log4j
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
# 合并多个DruidDataSource的监控数据
spring.datasource.useGlobalDataSourceStat=true


#JPA Configuration:  
spring.jpa.database=MYSQL
# Show or not log for each sql query
spring.jpa.show-sql=false
spring.jpa.generate-ddl=true  
# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto=update  
#spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect  
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy  
#spring.jpa.database=org.hibernate.dialect.MySQL5InnoDBDialect 
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect


tet1234=03

#\u77ED\u4FE1\u7B7E\u540D
sign=\u3010\u62CD\u8D22\u5BCC\u3011

#\u8D22\u5BCC\u77ED\u4FE1\u53D1\u9001\u8FFD\u52A0\u6D4B\u8BD5\u8D26\u53F7\u914D\u7F6E
testAccFlag=\u005b\u6d4b\u8bd5\u8d26\u53f7\u005d

#\u529F\u80FD\u77ED\u4FE1\u8D26\u53F7\u5BC6\u7801
account=dh24541
password=a!4?S@~V

#\u8425\u9500\u77ED\u4FE1\u8D26\u53F7\u5BC6\u7801
accountMarketing=dh24542
passwordMarketing=E9TPJkoc

 #redis cluster
redis.cache.clusterNodes=172.17.247.73:7000,172.17.247.73:7001,172.17.247.73:7002,172.17.247.73:7003,172.17.247.73:7004,172.17.247.73:7005
redis.cache.commandTimeout=5000
#unit:second
redis.cache.expireSeconds=120

